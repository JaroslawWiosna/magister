dist: trusty
os: linux
language: cpp

compiler:
    - gcc
    - clang

install:
    - if [ "$CXX" = "g++" ]; then export CC="gcc-7" CXX="g++-7"; export CHECK_COVERAGE="true"; fi
    - if [ "$CXX" = "clang++" ]; then export CC="clang-5.0" CXX="clang++-5.0"; fi    
    - cd ${TRAVIS_BUILD_DIR}
    - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.13.orig.tar.gz
    - tar xf lcov_1.13.orig.tar.gz
    - sudo make -C lcov-1.13/ install
    - gem install coveralls-lcov
    
addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty
            - llvm-toolchain-trusty-5.0
            - george-edison55-precise-backports
        packages:
            - gcc-7
            - g++-7
            - clang-5.0
            - clang++-5.0
            - llvm-5.0-dev
            - cmake
            - libgtest-dev

before_script:
    - echo "before_script"
    - "cd /usr/src/gtest && sudo cmake . && sudo cmake --build . && sudo mv libg* /usr/local/lib/ ; cd -"

script: 
    - cmake -H. -B_builds && (cd _builds/ && make clean && make -j2 && make test)

after_success:
    - cd ${TRAVIS_BUILD_DIR} 
    - lcov --directory . --capture --output-file coverage.info
    - lcov --base-directory . --capture --output-file coverage.info
    - lcov --directory build --capture --output-file coverage.info
    - lcov --base-directory build --capture --output-file coverage.info
    - cd _builds
    - make clean
    - cmake -DCOVERAGE=ON ..
    - if [ "$CHECK_COVERAGE" = "true" ]; then make -j2; fi
    - if [ "$CHECK_COVERAGE" = "true" ]; then make test; fi
    - cd -
    - if [ "$CHECK_COVERAGE" = "true" ]; then lcov --directory . --capture --output-file coverage.info; fi
    - if [ "$CHECK_COVERAGE" = "true" ]; then lcov --remove coverage.info 'test/*' '/usr/*' --output-file coverage.info; fi
    - if [ "$CHECK_COVERAGE" = "true" ]; then lcov --list coverage.info; fi
    - if [ "$CHECK_COVERAGE" = "true" ]; then coveralls-lcov coverage.info; fi

